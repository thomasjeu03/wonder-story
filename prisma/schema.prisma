generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url = env("POSTGRES_PRISMA_URL")
  directUrl = env("POSTGRES_URL_NON_POOLING")
}

model User {
  id               Int      @id @default(autoincrement())
  email            String   @unique
  name             String?
  image            String?
  storiesGenerated Int?     @default(0)
  plan             UserPlan @default(FREE)
  emailVerified    DateTime?
  accounts         Account[]
  sessions         Session[]
  storys           Story[]

  stripeCustomerId String?
}

enum UserPlan {
  FREE
  PREMIUM
}

model Account {
  id                Int    @id @default(autoincrement())
  userId            Int
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  user              User   @relation(fields: [userId], references: [id])
  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  expires      DateTime
  userId       Int
  user         User     @relation(fields: [userId], references: [id])
  @@unique([userId, expires])
}

model Story {
  id              Int        @id @default(autoincrement())
  userId          Int
  content         String
  ageRange        Int
  caracters      String[]
  mainCaracter   String
  places          String[]
  time            Int
  moral           Boolean    @default(true)
  genres          String[]
  locale          String
  createdAt       DateTime   @default(now())
  title           String?
  backgroundColor String?
  coverImage      String?
  isPublic        Boolean    @default(false)
  audioUrl        String?
  user            User       @relation(fields: [userId], references: [id])
  @@index([userId])
}

model Caracter {
  id            Int          @id @default(autoincrement())
  name          String
  image         String?
  createdAt     DateTime     @default(now())
  caracterTagId Int?
  caracterTag   CaracterTag? @relation(fields: [caracterTagId], references: [id])
  @@index([caracterTagId])
}

model CaracterTag {
  id        Int        @id @default(autoincrement())
  name      String
  color     String?
  icon      String?
  createdAt DateTime   @default(now())
  caracter  Caracter[]
}